input {
  file {
    path => "/logs/**/**/**/**/**/**/*.log.gz"
    sincedb_path => "/dev/null"
    start_position => "beginning"
    mode => "read"
    # Use plain codec without attempting to decompress
    codec => "plain"
  }
}

filter {
  # Extract metadata from file path
  grok {
    match => { "path" => "/logs/%{DATA:account_id}/vpcflowlogs/%{DATA:region}/%{NUMBER:year}/%{NUMBER:month}/%{NUMBER:day}/%{GREEDYDATA:filename}" }
  }
  
  # Decompress gzipped content using Ruby
    ruby {
    code => "
        require 'zlib'
        require 'stringio'
        Thread.current[:decompressor] ||= Zlib::Inflate.new(Zlib::MAX_WBITS + 16)
        begin
        decompressed = Thread.current[:decompressor].inflate(event.get('message'))
        event.set('message', decompressed)
        rescue => e
        Thread.current[:decompressor] = Zlib::Inflate.new(Zlib::MAX_WBITS + 16)
        event.tag('_gzip_decompress_error')
        end
    "
    }
  
  # Parse VPC flow log entries - split into multiple events if needed
  split {
    field => "message"
    terminator => "\n"
  }
  
  # Parse VPC flow log entries
  grok {
    match => { "message" => "%{NUMBER:version} %{DATA:account_id} %{DATA:interface_id} %{IPORHOST:srcaddr} %{IPORHOST:dstaddr} %{NUMBER:srcport} %{NUMBER:dstport} %{NUMBER:protocol} %{NUMBER:packets} %{NUMBER:bytes} %{NUMBER:start_time} %{NUMBER:end_time} %{DATA:action} %{DATA:log_status}" }
  }
  
  # Convert fields to appropriate types
  mutate {
    convert => {
      "srcport" => "integer"
      "dstport" => "integer"
      "protocol" => "integer"
      "packets" => "integer"
      "bytes" => "integer"
      "start_time" => "integer"
      "end_time" => "integer"
      "version" => "integer"
    }
  }
  
  # Create timestamp from start time (Unix timestamp)
  date {
    match => [ "start_time", "UNIX" ]
    target => "@timestamp"
  }
  
  # Also create a date field from end_time
  date {
    match => [ "end_time", "UNIX" ]
    target => "end_time_date"
  }
  
  # Add additional fields if needed
  mutate {
    add_field => { "full_path" => "%{path}" }
  }
}

output {
    elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "vpc-flow-logs-%{+YYYY.MM}"
  }
}